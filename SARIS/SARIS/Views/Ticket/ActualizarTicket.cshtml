@model OrionCoreCableColor.Models.Ticket.TicketMiewModel
<div class="modal-header bg-primary-600 bg-primary-gradient">
    <h2 class="modal-title text-white">

        <text>Editar Ticket</text>

    </h2>

    <button type="button" class="close" data-dismiss="modal">
        <i class="fal fa-times-circle fa-fw fa-lg"></i>
    </button>
</div>

<div class="modal-body">
    <div class="row">
        <div class="col-lg-6">
            <div class="row">

                <div class="col-sm-12">
                    <div class="form-group">
                        <label class="col-form-label">Titulo</label>
                        @Html.EditorFor(model => model.fcTituloRequerimiento, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="form-group">
                        <label class="col-form-label">Descripcion</label>
                        @Html.EditorFor(model => model.fcDescripcionRequerimiento, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="form-group">
                        <label class="col-form-label">Area</label>
                        @Html.DropDownListFor(model => model.fiAreaAsignada, new SelectList(ViewBag.ListarArea, "Value", "Text"), null, new { @class = "form-control input-lg", @style = "width:100%;" })
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="form-group">
                        <label class="col-form-label">Estado</label>
                        @Html.DropDownListFor(model => model.fiIDEstadoRequerimiento, new SelectList(ViewBag.Estados, "Value", "Text"), null, new { @class = "form-control input-lg", @style = "width:100%;" })
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="form-group">
                        <label class="col-form-label">Asignado</label>
                        <select id="selectusuarios" class="form-select form-control">
                            <option value="0">Seleccione un Area Primero</option>
                        </select>
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="form-group">
                        <label class="col-form-label">Comentario</label>
                        <input id="txtComentario" class="form-control" type="text" placeholder="Escriba un comentario para este Ticket" />
                    </div>
                </div>

            </div>
        </div>

        <div class="col-lg-6">
            <div class="row">
                <div class="col-lg-12">
                    <div class="form-group">
                        <label class="control-label">DOCUMENTO (Solo se pueden subir pdf e imagenes) </label>

                        <form id="Imagen-dropzone" action="@Url.Action("FormFileResponse","Base")" method="post" enctype="multipart/form-data" class="dropzone needsclick">
                            <div class="dz-message needsclick">

                                <div class="dz-icon">
                                    <i class="fal fa-cloud-upload text-muted mb-3"></i>
                                </div>
                                <div>
                                    <span class="dz-text">Arrastre Imagen</span>
                                    <p class="text-sm text-muted">O Click para elegirla manualmente</p>
                                </div>
                            </div>
                        </form>


                    </div>

                </div>
            </div>
        </div>
    </div>

    <div class='test col-sm-12'>
        <br />
        <div style='float: right;'>
            <button type="button" id="btnActualizarDatosRequerimiento" class="btn btn-success">
                Actualizar Datos
            </button>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-6">
        
        </div>
    </div>


</div>


<script>
    ///$("#fiIDEstadoRequerimiento").select2({ dropdownParent: $("#MyModalBig") }).trigger("change")
    ///$("#fiIDAreaSolicitante").select2({ dropdownParent: $("#MyModalBig") }).trigger("change")
    var estadoRequerimiento = 0;
    var ID_REQUERIMIENTO = @ViewBag.idticket;
    var ID_USUARIO = "1"

    var fotosredimencionadas = [];


    $(document).ready(function () {
        estadoRequerimiento = $("#dllEstadoRequerimiento option:selected").val();
    });

    $("#btnActualizarDatosRequerimiento").click(function () {
        ActualizarDatos();
    });

    function ActualizarDatos() {
        var estado = 0;
        var estadoDescripcion = "";

        if ($("#txtComentario").val() != "" || $("#txtComentario").val() != null) {
            var bitacora = {
                //idRequerimiento: ID_REQUERIMIENTO,
                Observaciones: $("#txtComentario").val(),
            }
            
            var requerimiento = {
                fiIDRequerimiento: ID_REQUERIMIENTO,
                fcTituloRequerimiento: $("#fcTituloRequerimiento").val(),
                fcDescripcionRequerimiento: $("#fcDescripcionRequerimiento").val(),//hola,
                fiIDEstadoRequerimiento: $("#fiIDEstadoRequerimiento option:selected").val(),
                fcDescripcionEstado: $("#fiIDEstadoRequerimiento :selected").text(),

                fiIDUsuarioAsignado: $("#fiIDUsuarioAsignado option:selected").val() == "" ? 1 : parseInt($("#fiIDUsuarioAsignado option:selected").val()),

                fiTipoRequerimiento: 1,//$("#txtComentario").val(),
                fiIDAreaSolicitante: $("#fiIDAreaSolicitante option:selected").val() == null ? 0 : parseInt($("#fiIDAreaSolicitante option:selected").val()),//$("#txtComentario").val(),
                fcNombreAreaSolicitante: $("#fiIDAreaSolicitante :selected").text(),
                fiAreaAsignada: $(`#fiAreaAsignada`).val() == null ? 0 : parseInt($("#fiAreaAsignada option:selected").val()),
            }
            $.ajax({
                type: "POST",
                url: "@Url.Action("ActualizarDatos", "Ticket")",
                data: { ticket: requerimiento, comentario: $("#txtComentario").val()},
                error: function (xhr, ajaxOptions, thrownError) {
                    //MensajeError("Error, contacte al administrador.");
                    var dataerror = { Titulo: "Error", Mensaje: "Error Al Actualizar el Ticket", Estado: false }
                    AlertaAjax(dataerror)
                },
                success: function (data) {
                    console.log(data);

                    let resultado = data.d;
                    if (data.Estado == true) {
                        var dataerror = { Titulo: "Exito", Mensaje: "Se Actualizo el Ticket Correctamente", Estado: true }
                        AlertaAjax(dataerror)
                        $("#txtComentario").val(""),
                          //  MensajeExitoModal('los datos se Actualizaron correctamente.');
                        $("#modalConfirmarDatos").modal('hide');
                        //window.location = "BandejaRequerimientoDesarrollo.aspx?" + window.location.href.split('?')[1];
                        GuardarDocumentos(data.IdIngresado);
                        window.location.href ="@Url.Action("Index", "Ticket")"
                        //CargarDetalleBitacora();
                        //location.reload();
                    }
                    else {
                        var dataerror = { Titulo: "Error", Mensaje: "Error Al Actualizar el Ticket", Estado: false }
                        AlertaAjax(dataerror)
                        //MensajeErrorModal("No se pudo realizar la actualizacion de Datos, contacte al administrador.");
                    }


                }
            });

        }
        else {
            $("#txtComentario").parsley().validate();
        }

    }

    $("#btnActualizarDatos_Confirmar").click(function () {
        ActualizarDatos();

    });


    myDropzone = $('#Imagen-dropzone').dropzone({
        //url: '/file/post',
        autoProcessQueue: true,
        uploadMultiple: true,
        acceptedFiles: "image/*,.pdf",
        //maxFiles: 1,
        addRemoveLinks: true,
        dictMaxFilesExceeded: "Maximum upload limit reached",
        dictInvalidFileType: "upload only JPG/PNG",
        //resizeWidth: 500,
        //resizeHeight: 300,

        init: function () {
            myDropzoneCapture = this;
            var myDropzone = this;
            myDropzone.on('maxfilesexceeded', function (file) {
                this.removeAllFiles();
                this.addFile(file);
            });

            myDropzone.on('thumbnail', function (file, dataURL) {

                RedimencionarImagen(`fotopreviacanva`, file, "fotoprevia2", file.name);

            });
        },

        removedfile: function (file) {

            archivoExterno = 0;
            var _ref = file.previewElement;

            return _ref != null ? _ref.parentNode.removeChild(file.previewElement) : void 0;
        }
    });

    function RedimencionarImagen(idcanva, eimagencaptada, idimg, NombreArchivo) {
        debugger;
        var canvas = document.createElement('canvas');
        var ctx = canvas.getContext('2d'); // capturamos el id del camva para ponerlo la imagen oculta ahi y asi poder tomar esa imagen y no la que se esta mostrando
        var img = new Image;
        img.src = URL.createObjectURL(eimagencaptada); // insertamos la imagen que el cliente subio para posteriormente hacer la reduccion
        img.onload = function () {
            //var canvas = document.getElementById(idcanva);
            var maxAncho = 900; //aqui le ponemos unas medidas estandar que pueden cambiar en un futuro,
            var maxAlto = 1500;

            var proporcion = Math.min(maxAncho / img.width, maxAlto / img.height); // aqui hacemos una proporcion de las imagenes con respecto al tamaño de la imagen original y al estandar que tenemos nosotros aqui adentro
            var propdos = img.width / img.height;
            var ancho = img.width * proporcion;
            var alto = img.height * proporcion;

            canvas.width = (img.width / propdos); // ponemos el tamaño en el canva oculto
            canvas.height = (img.height / propdos);

            ctx.drawImage(img, 0, 0, (img.width / propdos), (img.height / propdos));
            //console.log(canvas.toDataURL('image/jpeg', 0.7)); // tira el base 64

            var urlbase64 = getBase64Image(img); // tira el base 64
            console.log(canvas.toDataURL('image/jpeg', 0.7)); // aqui para saber el base64 de la imagen
            fotosredimencionadas.push({ base: canvas.toDataURL('image/jpeg', 0.7), nombreArchivo: NombreArchivo });
            return ctx;
            //document.getElementById(idimg).src = canvas.toDataURL('image/jpeg', 0.7); // el 07 es la calidad de la imagen si no estoy mal eso decia en la documentacion
            //document.getElementById(idcanva).style.display = "block"; //mostrar la imagen que esta oculta
        }
    }

    function getBase64Image(img) {
        var canvas = document.createElement("canvas");
        canvas.width = img.width;
        canvas.height = img.height;
        var ctx = canvas.getContext("2d");
        ctx.drawImage(img, 0, 0);
        var dataURL = canvas.toDataURL();
        return dataURL;
    }

    function GuardarDocumentos(IdRequerimiento) {
        debugger
        //const form = new FormData();

        //form.append("idDocumento", 1);
        var mod = [];

        var cont = 0;
        if (fotosredimencionadas.length < 1) {
            var datasus = { Titulo: "Exito", Mensaje: "Ticket Guardado correctamente", Estado: true }
            AlertaAjax(datasus)
            return 0;
        }

        for (const item of fotosredimencionadas) {
            mod.push({ piIDRequerimiento: IdRequerimiento, pcTipoArchivo: 1, pcNombreArchivo: item.nombreArchivo, pcRutaArchivo: item.base, idSesion: 1, idApp: 1, pcURL: "-" });


            //form.append(`modelo[${cont}].`, );
            ////form.append("modelo[].idUsuario", ID_USUARIO);
            //form.append(`modelo[${cont}].`, 1); // se usaba anteriormente para saber si un archivo era imagen, documento o un dinosaurio, pero con el base 64 eso ya no importa pero para no cambiar todo el flujo se deja en 1
            //form.append(`modelo[${cont}].`, );
            //form.append(`modelo[${cont}].`, );
            //form.append(`modelo[${cont}].`, 1); //de momento no se para que se ocupa estas variables pero el procedimiento las pide asi que poner 1 por cualquier cosa
            //form.append(`modelo[${cont}].`, 1);//de momento no se para que se ocupa estas variables pero el procedimiento las pide asi que poner 1 por cualquier cosa
            //cont++
        }


        $.ajax({
            url: "@Url.Action("Guardardocumentos", "Ticket")",
            type: "POST",
            data: { modelo: mod },

                timeout: 800000,
                success: function (data) {
                    var datasus = { Titulo: "Exito", Mensaje: "Documentos guardados correctamente", Estado: true }
                    AlertaAjax(datasus)

                    //location.reload();

                },
                error: function (e) {
                    var dataerror = { Titulo: "Error", Mensaje: "Error Al querer Subir Imagenes", Estado: false }
                    AlertaAjax(dataerror)
                    console.error(e);

                }
            });


    }

    $(`#fiAreaAsignada`).on(`change`, function () {
        $(this).val();
        $.ajax({
            url: "@Url.Action("SelectUsuarios", "LlenarCampos")",
            type: "GET",
            data: { idarea: $(this).val()},
            success: function (respuesta) {

                var selectIncidencia = $("#selectusuarios");

                selectIncidencia.empty();
                selectIncidencia.append($('<option>', {
                    value: 0,
                    text: 'Seleccione un Usuario'
                }));

                $("#selectusuarios").select2({ dropdownParent: $("#MyModalBig") }).val(null).trigger("change");
                $.each(respuesta, function(index, item) {
                    selectIncidencia.append($('<option>', {
                        value: item.Value,
                        text: item.Text
                    }));
                });
            },
            error: function (respuesta) {
                console.log(respuesta);
            }
        });

    });

    function select() {


    }


</script>